set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-surround'
Plugin 'easymotion/vim-easymotion'
Plugin 'haya14busa/incsearch.vim'
Plugin 'haya14busa/incsearch-easymotion.vim'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'dracula/vim', { 'name': 'dracula' }
Plugin 'lunacookies/vim-colors-xcode', {'name':'xcode'}


call vundle#end()            " required
filetype plugin indent on    " required

" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line


function! s:incsearch_config(...) abort
  return incsearch#util#deepextend(deepcopy({
  \   'modules': [incsearch#config#easymotion#module({'overwin': 1})],
  \   'keymap': {
  \     "\<CR>": '<Over>(easymotion)'
  \   },
  \   'is_expr': 0
  \ }), get(a:, 1, {}))
endfunction

let mapleader = "\<Space>"
map <Leader> <Plug>(easymotion-prefix)
noremap <silent><expr> /  incsearch#go(<SID>incsearch_config())

"cut with m, set marker with gm
set clipboard=unnamed

" release Ctrl+N/P key bindings
let g:EasyClipUsePasteToggleDefaults = 0
let g:EasyClipAutoFormat = 1
let g:EasyClipShareYanks = 1

syntax on
colorscheme xcodedarkhc
